{"version":3,"sources":["pages/Error/Error.module.css","components/Layout/Layout.module.css","components/NoPosts/NoPosts.module.css","components/Spinner/Spinner.module.css","components/Spinner/Spinner.js","components/Layout/Layout.js","pages/Error/Error.js","components/Comment/Comment.js","components/ShowComments/ShowComments.js","components/NoPosts/NoPosts.js","components/Post/Post.js","components/DisplayPosts/DisplayPosts.js","pages/Posts/Posts.js","App.js","index.js","components/Comment/Comment.module.css","components/Post/Post.module.css","components/ShowComments/ShowComments.module.css"],"names":["module","exports","Spinner","id","styles","spinner","Layout","children","container","main","Error","specific","useState","setSpinner","useEffect","setTimeout","errorContainer","errorBody","error","className","link","to","Comment","currentPost","writeComment","setWriteComment","setCurrentPost","specificError","setError","submitComment","e","preventDefault","data","post","_id","newComment","target","parentElement","previousElementSibling","value","name","adjComment","trim","adjName","test","length","push","validate","fetch","method","mode","headers","body","JSON","stringify","then","res","json","response","updated","console","log","window","location","href","catch","mainContainer","postContainer","postInfo","postTitle","title","postBody","text","moment","timestamp","format","inputContainer","commentUser","placeholder","commentArea","submitCancelContainer","submitCommentBtn","onClick","cancelBtn","ShowComments","commentsAreActive","commentSpinner","setCommentSpinner","active","setActive","comments","map","comment","index","data-id","commentsActive","commentsInactive","key","commentInfo","commentBody","paddingLast","commentName","noCommentActive","noCommentInactive","NoPosts","Post","setCommentsAreActive","prevBtn","nextBtn","commentBtn","showCommentsBtn","btn","innerText","disabled","seeHideComments","DisplayPosts","Posts","App","basename","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9991e3aa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Error_error__2WwmA\",\"errorBody\":\"Error_errorBody__2g6yq\",\"errorContainer\":\"Error_errorContainer__2xGfw\",\"link\":\"Error_link__1cUrZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Layout_container__1nNA4\",\"main\":\"Layout_main__1dFZc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postBody\":\"NoPosts_postBody__1vJ4k\",\"postContainer\":\"NoPosts_postContainer__35G7c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"Spinner_spinner__1Neu5\",\"spin\":\"Spinner_spin__2cA5G\"};","import React from 'react';\nimport styles from \"./Spinner.module.css\";\n\nconst Spinner = () => {\n    return (\n        <div id={styles.spinner}></div>\n    )\n}\n\nexport default Spinner\n","import React from 'react';\nimport styles from \"./Layout.module.css\";\n\nconst Layout = ({ children }) => {\n\n    return (\n        <div id={styles.container}>\n            <main id={styles.main}>\n                <h1>Blog</h1>\n                {children}\n            </main>\n        </div>\n    )\n}\n\nexport default Layout","import React, { useState, useEffect } from 'react';\nimport Layout from \"../../components/Layout\";\nimport styles from \"./Error.module.css\";\nimport { Link } from \"react-router-dom\";\nimport Spinner from \"../../components/Spinner\";\n\nconst Error = ({ specific }) => {\n    const [spinner, setSpinner] = useState(true);\n    // const { specific } = useParams();\n\n    useEffect(() => {\n        setTimeout(() => {\n            setSpinner(false);\n        }, 1000);\n    }, [])\n\n    return (\n        <Layout>\n            {spinner ?\n                <Spinner />\n                :\n                <div id={styles.errorContainer}>\n                    <p id={styles.errorBody}><span id={styles.error}>Error: </span>{specific === \"comment\" ? \"Comments must be 200 characters or less, and may not be empty.\" :\n                        specific === \"characters\" ? \"The Name field must not be blank, and only the characters a-z 0-9 @ . - are allowed as part of the Name field.\" :\n                            \"Something went wrong.\"}\n                    </p>\n                    <Link className={styles.link} to=\"/blog-posts/\">Back</Link>\n                </div>}\n        </Layout>\n    )\n}\n\nexport default Error\n","import React, { useState, useEffect } from 'react';\nimport moment from \"moment\";\nimport styles from \"./Comment.module.css\";\nimport Spinner from \"../Spinner\";\nimport Error from \"../../pages/Error\";\n\nconst Comment = ({ currentPost, writeComment, setWriteComment, setCurrentPost }) => {\n\n    const [spinner, setSpinner] = useState(true);\n    const specificError = [];\n    const [error, setError] = useState(false);\n\n    useEffect(() => {\n        setTimeout(() => {\n            setSpinner(false);\n        }, 1000);\n    }, [])\n\n    const validate = ({ newComment, name }) => {\n        const adjComment = newComment.trim();\n        const adjName = name.trim();\n        if ((/^[a-z0-9\\s@\\.\\-,]+$/i.test(adjName) === false) || (adjName === \" \")\n            || (adjName.length === 0)) {\n            specificError.push(\"characters\");\n            return false;\n        }\n        else if ((adjComment.length > 200) || (adjComment === \" \")) {\n            specificError.push(\"comment\");\n            return false;\n        }\n        else {\n            return true;\n        }\n    }\n\n    const submitComment = (e) => {\n        e.preventDefault();\n        const data = {\n            post: currentPost._id,\n            newComment: e.target.parentElement.previousElementSibling.value,\n            name: e.target.parentElement.previousElementSibling.previousElementSibling.children[0].value\n        }\n        if (validate(data)) {\n            fetch(\"https://nameless-plains-23983.herokuapp.com/api/posts\", {\n                // fetch(\"http://localhost:3001/api/posts\", {\n                method: \"POST\",\n                mode: \"cors\",\n                headers: {\n                    \"Content-type\": \"application/json\"\n                },\n                body: JSON.stringify(data)\n            })\n                .then(res => {\n                    return res.json();\n                })\n                .then(response => {\n                    if (response.updated) {\n                        console.log(response.updated);\n                        setCurrentPost(response.updated);\n                        window.location.href = \"/blog-posts\";\n                    }\n                    else if (response.specific) {\n                        console.log(response.specific);\n                        setError(response.specific);\n                        // window.location.href = `/blog-posts${response.specific}`;\n                    }\n                    else {\n                        setError(true);\n                        // window.location.href = \"/blog-posts/error\";\n                    }\n                })\n                .catch(error => {\n                    // window.location.href = \"/blog-posts/error\";\n                    setError(true);\n                })\n        }\n        else {\n            setError(specificError[0])\n            // window.location.href = `/blog-posts${specificError[0]}`;\n        }\n    }\n\n    return (\n        spinner ?\n            <Spinner />\n            :\n            error ?\n                <Error specific={error} />\n                :\n                <div id={styles.mainContainer}>\n                    <div className={styles.postContainer}>\n                        <p className={`${styles.postInfo} ${styles.postTitle}`}>{currentPost.title}</p>\n                        <p className={`${styles.postBody} ${styles.postInfo}`}>{currentPost.text}</p>\n                        <p className={styles.postInfo}>Posted: {moment(currentPost.timestamp).format('L')}</p>\n                    </div>\n                    <div id={styles.inputContainer}>\n                        <input id={styles.commentUser} placeholder={\"Your Name...\"} />\n                    </div>\n                    <textarea id={styles.commentArea} placeholder={\"Your Comment (200 characters or less)...\"} />\n                    <div className={styles.submitCancelContainer}>\n                        <button id={styles.submitCommentBtn} onClick={(e) => { submitComment(e); setWriteComment(!writeComment); }}>Submit Comment</button>\n                        <button id={styles.cancelBtn} onClick={() => setWriteComment(!writeComment)}>Cancel</button>\n                    </div>\n                </div>\n    )\n}\n\nexport default Comment","import React, { useState, useEffect } from 'react';\nimport styles from \"./ShowComments.module.css\";\nimport Spinner from \"../Spinner\";\nimport moment from \"moment\";\n\nconst ShowComments = ({ currentPost, commentsAreActive }) => {\n\n    const [commentSpinner, setCommentSpinner] = useState(false);\n    const [active, setActive] = useState(false);\n\n    useEffect(() => {\n        if (commentsAreActive) {\n            setCommentSpinner(true);\n            setTimeout(() => {\n                setCommentSpinner(false);\n            }, 1000);\n        }\n    }, [commentsAreActive])\n\n    useEffect(() => {\n        if (commentsAreActive) {\n            setActive(true);\n        }\n        else {\n            setActive(false);\n        }\n    }, [commentsAreActive])\n\n    return (\n        commentSpinner ?\n            <Spinner />\n            :\n            currentPost.comments[0] ?\n                currentPost.comments.map((comment, index) => {\n                    return (\n                        <div data-id={comment._id} className={!active ? styles.commentsInactive : styles.commentsActive} key={index}>\n                            <p className={`${styles.commentInfo} ${styles.commentBody}`}>{comment.text}</p>\n                            <p className={`${styles.commentInfo} ${styles.paddingLast}`}><span id={styles.commentName}>{comment.name}</span> - {moment(comment.timestamp).format('L')}</p>\n                        </div>\n                    )\n                })\n                :\n                <div id={active ? styles.noCommentActive : styles.noCommentInactive}>\n                    <p>There are no comments for this post.</p>\n                </div>\n    )\n}\n\nexport default ShowComments\n","import React from 'react';\nimport styles from \"./NoPosts.module.css\";\n\nconst NoPosts = () => {\n    return (\n        <div className={styles.postContainer}>\n            <p className={styles.postBody}>There are currently no posts.</p>\n        </div>\n    )\n}\n\nexport default NoPosts\n","import React, { useState, useEffect } from 'react';\nimport styles from \"./Post.module.css\";\nimport moment from \"moment\";\nimport Spinner from \"../Spinner\";\nimport ShowComments from \"../ShowComments\";\nimport NoPosts from \"../NoPosts\";\n\nconst Post = ({ setCurrentPost, currentPost, setWriteComment, writeComment }) => {\n\n    const [commentsAreActive, setCommentsAreActive] = useState(false);\n    const [spinner, setSpinner] = useState(true);\n\n    useEffect(() => {\n        setTimeout(() => {\n            setSpinner(false);\n        }, 1000);\n    }, [currentPost])\n\n    const nextPost = () => {\n        setSpinner(true);\n        setCommentsAreActive(false);\n        fetch(`https://nameless-plains-23983.herokuapp.com/api/posts/${currentPost._id}/next`, {\n            // fetch(`http://localhost:3001/api/posts/${currentPost._id}/next`, {\n            method: \"GET\",\n            mode: \"cors\"\n        })\n            .then(res => {\n                return res.json()\n            })\n            .then(response => {\n                if (response.post) {\n                    setCurrentPost(response.post[0]);\n                }\n            })\n            .catch(error => {\n                console.log(error);\n            })\n    }\n\n    const prevPost = () => {\n        setSpinner(true);\n        setCommentsAreActive(false);\n        fetch(`https://nameless-plains-23983.herokuapp.com/api/posts/${currentPost._id}/prev`, {\n            // fetch(`http://localhost:3001/api/posts/${currentPost._id}/prev`, {\n            method: \"GET\",\n            mode: \"cors\"\n        })\n            .then(res => {\n                return res.json()\n            })\n            .then(response => {\n                if (response.post) {\n                    setCurrentPost(response.post[0]);\n                }\n            })\n            .catch(error => {\n                console.log(error);\n            })\n    }\n\n    const seeHideComments = (e) => {\n        const btn = e.target;\n        console.log(e.target.innerText);\n        if (e.target.innerText === \"See Comments\") {\n            btn.disabled = true;\n            setCommentsAreActive(!commentsAreActive);\n            setTimeout(() => {\n                btn.disabled = false\n            }, 1000)\n        }\n        else {\n            setCommentsAreActive(!commentsAreActive);\n        }\n    }\n\n    return (\n        spinner ?\n            <Spinner />\n            : currentPost ?\n                <div id={styles.mainContainer}>\n                    <div className={styles.postContainer}>\n                        <p className={`${styles.postInfo} ${styles.postTitle}`}>{currentPost.title}</p>\n                        <p className={`${styles.postBody} ${styles.postInfo}`}> {currentPost.text}</p>\n                        <p className={styles.postInfo}>Posted: {moment(currentPost.timestamp).format('L')}</p>\n                        <button className={styles.prevBtn} onClick={() => prevPost()}>Previous</button>\n                        <button className={styles.nextBtn} onClick={() => nextPost()}>Next</button>\n                        <button className={styles.commentBtn} onClick={() => setWriteComment(!writeComment)}>Add Comment</button>\n                    </div>\n                    <button className={styles.showCommentsBtn} onClick={(e) => seeHideComments(e)}>{commentsAreActive ? \"Hide Comments\" : \"See Comments\"}</button>\n                    <ShowComments currentPost={currentPost} commentsAreActive={commentsAreActive} />\n                </div>\n                :\n                <NoPosts />\n    )\n}\n\nexport default Post\n","import React, { useEffect, useState } from 'react';\nimport Comment from \"../Comment\";\nimport Post from \"../Post\";\nimport NoPosts from \"../NoPosts\";\nimport Spinner from \"../Spinner\";\n\nconst DisplayPosts = () => {\n    const [writeComment, setWriteComment] = useState(false);\n    const [currentPost, setCurrentPost] = useState(null);\n    const [spinner, setSpinner] = useState(true);\n\n    useEffect(() => {\n        fetch(\"https://nameless-plains-23983.herokuapp.com/api/posts\", {\n            // fetch(\"http://localhost:3001/api/posts\", {\n            method: \"GET\",\n            mode: \"cors\",\n        })\n            .then(res => {\n                return res.json()\n            })\n            .then(response => {\n                if (response.post[0]) {\n                    console.log(response.post[0]);\n                    setCurrentPost(response.post[0]);\n                }\n                else {\n                    setTimeout(() => {\n                        setSpinner(false);\n                    }, 1000)\n                }\n            })\n            .catch(error => {\n                console.log(error);\n            })\n    }, [])\n\n    useEffect(() => {\n        if (currentPost) {\n            setTimeout(() => {\n                setSpinner(false);\n            }, 1000);\n        }\n    }, [currentPost])\n\n    const showPosts = () => {\n        return (\n            writeComment ? <Comment setCurrentPost={setCurrentPost} currentPost={currentPost} writeComment={writeComment} setWriteComment={setWriteComment} />\n                : currentPost ? <Post setCurrentPost={setCurrentPost} currentPost={currentPost} setWriteComment={setWriteComment} writeComment={writeComment} /> : <NoPosts />\n        )\n    }\n\n    return (\n        spinner ? <Spinner /> : showPosts()\n    )\n}\n\nexport default DisplayPosts","import React from 'react';\nimport DisplayPosts from \"../../components/DisplayPosts\";\nimport Layout from \"../../components/Layout\";\n\nconst Posts = () => {\n    return (\n        <Layout>\n            <DisplayPosts />\n        </Layout>\n    )\n}\n\nexport default Posts\n","import React from 'react';\nimport Posts from \"./pages/Posts\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router basename=\"/blog-posts\">\n      <div className=\"App\">\n        <Route exact path=\"/\" component={Posts} />\n      </div >\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postContainer\":\"Comment_postContainer__1b81W\",\"postInfo\":\"Comment_postInfo__2GeiF\",\"postTitle\":\"Comment_postTitle__2W_Ro\",\"postBody\":\"Comment_postBody__1IHwO\",\"inputContainer\":\"Comment_inputContainer__1h3KW\",\"commentUser\":\"Comment_commentUser__XWNgC\",\"commentArea\":\"Comment_commentArea__23ZLh\",\"submitCancelContainer\":\"Comment_submitCancelContainer__RqH8C\",\"submitCommentBtn\":\"Comment_submitCommentBtn__3AXZs\",\"cancelBtn\":\"Comment_cancelBtn__I2vu6\",\"commentBtn\":\"Comment_commentBtn__gURR2\",\"mainContainer\":\"Comment_mainContainer__3pCq1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postContainer\":\"Post_postContainer__y69o4\",\"postInfo\":\"Post_postInfo__2NGOe\",\"postTitle\":\"Post_postTitle__3hPg-\",\"postBody\":\"Post_postBody__1Yb52\",\"prevBtn\":\"Post_prevBtn__3OneU\",\"nextBtn\":\"Post_nextBtn__2OtbN\",\"commentBtn\":\"Post_commentBtn__1BCr2\",\"showCommentsBtn\":\"Post_showCommentsBtn__1d-DH\",\"commentInfo\":\"Post_commentInfo__b9HR4\",\"commentBody\":\"Post_commentBody__3msXm\",\"commentsActive\":\"Post_commentsActive__mItcK\",\"commentsInactive\":\"Post_commentsInactive__3D4BA\",\"paddingLast\":\"Post_paddingLast__Ia5N2\",\"commentName\":\"Post_commentName__1wQei\",\"mainContainer\":\"Post_mainContainer__16AjI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"commentsActive\":\"ShowComments_commentsActive__1Ieql\",\"commentsInactive\":\"ShowComments_commentsInactive__jqAW2\",\"commentInfo\":\"ShowComments_commentInfo__2u-MR\",\"commentBody\":\"ShowComments_commentBody__ST5kQ\",\"paddingLast\":\"ShowComments_paddingLast__81UC8\",\"deleteBtn\":\"ShowComments_deleteBtn__2EvO5\",\"noCommentActive\":\"ShowComments_noCommentActive__1lgez\",\"noCommentInactive\":\"ShowComments_noCommentInactive__3dH_W\",\"commentName\":\"ShowComments_commentName__uI7v_\"};"],"sourceRoot":""}